vnote_backup_file_826537664 /home/user/Documents/vnote_notebooks/DevOps-Book/1.Linux/Linux重定向.md
# Linux重定向

linux重定向：

0、1和2分别表示标准输入、标准输出和标准错误信息输出，可以用来指定需要重定向的标准输入或输出。

在一般使用时，`默认的是标准输出`，既1。当我们需要特殊用途时，可以使用其他标号。

例如，将某个程序的错误信息输出到log文件中：./program 2>log。

这样标准输出还是在屏幕上，但是错误信息会输出到log文件中。


另外，也可以实现0，1，2之间的重定向。2>&1：将错误信息重定向到标准输出。

Linux下还有一个特殊的文件/dev/null，它就像一个无底洞，所有重定向到它的信息都会消失得无影无踪。

这一点非常有用，当我们不需要回显程序的所有信息时，就可以将输出重定向到/dev/null

如果想要正常输出和错误信息都不显示，则要把标准输出和标准错误都重定向到/dev/null， 例如：

`# ls 1>/dev/null 2>/dev/null`

还有一种做法是将错误重定向到标准输出，然后再重定向到 /dev/null，例如：

`# ls >/dev/null 2>&1`

注意：此处的顺序不能更改，否则达不到想要的效果，此时先将标准输出重定向到 /dev/null，

然后将标准错误重定向到标准输出。

由于标准输出已经重定向到了/dev/null，因此标准错误也会重定向到/dev/null，于是一切静悄悄。

## 关于nohup

在使用nohup命令的时候，经常由于输出nohup.out的路径没有写入权限，而无法使用nohup。

这是可以使用Linux重定向的方法，将nohup.out重定向至一个有写入权限的路径，或者直接扔到/dev/null中。

nohup ./program >/dev/null 2>/dev/null &

或者

nohup ./program >/dev/null 2>&1 &
